-- -----------------------------------------------------------------------------
-- Copyright (C) 2022-2025 by Josef Friedrich <josef@friedrich.rocks>
-- -----------------------------------------------------------------------------
--
-- This program is free software: you can redistribute it and/or modify it
-- under the terms of the GNU General Public License as published by the
-- Free Software Foundation, either version 2 of the License, or (at your
-- option) any later version.
--
-- This program is distributed in the hope that it will be useful, but
-- WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
-- Public License for more details.
--
-- You should have received a copy of the GNU General Public License along
-- with this program. If not, see <https://www.gnu.org/licenses/>.
--
-- -----------------------------------------------------------------------------

-- A helper table to better navigate through the documentation using the
-- outline: https://github.com/Josef-Friedrich/LuaTeX_Lua-API#navigation-table-_n
_N = {}

_N._4_2_7_binary_input_from_files_with_fio = "page 66"

---
---@meta

---
---Binary input from files with `fio` (file input-output)
---
---This library provides a set of functions for reading numbers from a file and
---in addition to the regular `io` library functions.
---
---There are eight additional little endian variants for the `cardinal[1-4]`
---and `integer[1-4]` readers: `cardinal[1-4]le` and `integer[1-4]le`.
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/master/source/texk/web2c/luatexdir/lua/liolibext.c)
---* Source file of the `LuaTeX` manual: [luatex-lua.tex#L655-697](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/4f2b914d365bab8a2747afe6e8c86d0f1c8475f7/manual/luatex-lua.tex#L655-697)
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
fio = {}

---
---Read a 1 byte unsigned integer (8-bit) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  -- t: decimal=116 hexadecimal=74 binary=01110100
---  assert.equals(fio.readcardinal1(f), 116)
---  -- e: decimal=101 hexadecimal=65 binary=01100101
---  assert.equals(fio.readcardinal1(f), 101)
---  -- s: decimal=115 hexadecimal=73 binary=01110011
---  assert.equals(fio.readcardinal1(f), 115)
---  -- t: decimal=116 hexadecimal=74 binary=01110100
---  assert.equals(fio.readcardinal1(f), 116)
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L114-L122](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L114-L122)
---
---@param file file* # A file handle.
---
---@return integer # A 1 byte unsigned integer.
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readcardinal1(file) end

---
---Read a 2 byte unsigned integer (16-bit) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  -- t.e: decimal=29797 hexadecimal=74.65 binary=01110100.01100101
---  assert.equals(fio.readcardinal2(f), 29797)
---  -- s.t: decimal=29556 hexadecimal=73.74 binary=01110011.01110100
---  assert.equals(fio.readcardinal2(f), 29556)
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L137-L147](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L137-L147)
---
---@param file file* # A file handle.
---
---@return integer # A 2 byte unsigned integer
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readcardinal2(file) end

---
---Read a 3 byte unsigned integer (24-bit) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("luatex")
---  fio.setposition(f, 0)
---  -- l.u.a: decimal=7107937 hexadecimal=6C.75.61 binary=01101100.01110101.01100001
---  assert.equals(fio.readcardinal3(f), 7107937)
---  -- t.e.x: decimal=7628152 hexadecimal=74.65.78 binary=01110100.01100101.01111000
---  assert.equals(fio.readcardinal3(f), 7628152)
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L187-L198](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L187-L198)
---
---@param file file* # A file handle.
---
---@return integer # A 3 byte unsigned integer
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readcardinal3(file) end

---
---Read a 4 byte unsigned integer (32-bit) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  -- t.e.s.t:
---  -- decimal=1952805748
---  -- hexadecimal=74.65.73.74
---  -- binary=01110100.01100101.01110011.01110100
---  assert.equals(fio.readcardinal4(f), 1952805748)
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L241-L253](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L241-L253)
---
---@param file file* # A file handle.
---
---@return integer # A 4 byte unsigned integer.
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readcardinal4(file) end

---
---Read `number` unsigned integers of `bytes` as a table from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  local t = fio.readcardinaltable(f, 4, 1)
---  -- t: decimal=116 hexadecimal=74 binary=01110100
---  assert.equals(t[1], 116)
---  -- e: decimal=101 hexadecimal=65 binary=01100101
---  assert.equals(t[2], 101)
---  -- s: decimal=115 hexadecimal=73 binary=01110011
---  assert.equals(t[3], 115)
---  -- t: decimal=116 hexadecimal=74 binary=01110100
---  assert.equals(t[4], 116)
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L299-363](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L299-363)
---
---@param file file* # A file handle.
---@param number integer # The number of integers in the resulting table.
---@param bytes 1|2|3|4 # Specify 1 for 1 byte unsigned integer, 2 for a 2 byte unsigned integers, and so on.
---
---@return table<integer, integer>
function fio.readcardinaltable(file, number, bytes) end

---
---Read a 1 byte unsigned little endian integer (8-bit) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  assert.equals(fio.readcardinal1le(f), 116)
---  assert.equals(fio.readcardinal1le(f), 101)
---  assert.equals(fio.readcardinal1le(f), 115)
---  assert.equals(fio.readcardinal1le(f), 116)
---  assert.is_nil(fio.readcardinal1le(f))
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L137-L147](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L137-L147)
---
---@param file file* # A file handle.
---
---@return integer
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readcardinal1le(file) end

---
---Read a 2 byte unsigned little endian integer (16-bit) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  assert.equals(fio.readcardinal2le(f), 25972)
---  assert.equals(fio.readcardinal2le(f), 29811)
---  assert.is_nil(fio.readcardinal2le(f))
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L148-L158](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L148-L158)
---
---little endian variant
---
---@param file file* # A file handle.
---
---@return integer
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readcardinal2le(file) end

---
---Read a 3 byte unsigned little endian integer (24-bit) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  assert.equals(fio.readcardinal3le(f), 7562612)
---  assert.is_nil(fio.readcardinal3le(f))
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L199-L210](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L199-L210)
---
---little endian variant
---
---@param file file* # A file handle.
---
---@return integer
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readcardinal3le(file) end

---
---Read a 4 byte unsigned little endian integer (32-bit) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  assert.equals(fio.readcardinal4le(f), 1953719668)
---  assert.is_nil(fio.readcardinal4le(f))
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L254-L266](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L254-L266)
---
---little endian variant
---
---@param file file* # A file handle.
---
---@return integer
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readcardinal4le(file) end

---
---Read a 1 byte signed integer (8-bit) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  assert.equals(fio.readinteger1(f), 116)
---  assert.equals(fio.readinteger1(f), 101)
---  assert.equals(fio.readinteger1(f), 115)
---  assert.equals(fio.readinteger1(f), 116)
---  assert.is_nil(fio.readinteger1(f))
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L432-L442](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L432-L442)
---
---@param file file* # A file handle.
---
---@return integer # A 1 byte signed integer.
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readinteger1(file) end

---
---Read a 2 byte signed integer (16-bit) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  assert.equals(fio.readinteger2(f), 29797)
---  assert.equals(fio.readinteger2(f), 29556)
---  assert.is_nil(fio.readinteger2(f))
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L460-L471](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L460-L471)
---
---@param file file* # A file handle.
---
---@return integer # A 2 byte signed integer.
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readinteger2(file) end

---
---Read a 3 byte signed integer (24-bit) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  assert.equals(fio.readinteger3(f), 7628147)
---  assert.is_nil(fio.readinteger3(f))
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L518-530](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L518-530)
---
---@param file file* # A file handle.
---
---@return integer # A 3 byte signed integer.
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readinteger3(file) end

---
---Read a 4 byte signed integer (32-bit) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  assert.equals(fio.readinteger4(f), 1952805748)
---  assert.is_nil(fio.readinteger4(f))
---  f:close()
---end
---```
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L580-593](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L580-593)
---
---@param file file* # A file handle.
---
---@return integer # A 4 byte signed integer.
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readinteger4(file) end

---
---Read `number` signed integers of `bytes` as a table from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---
---  local t = fio.readintegertable(f, 4, 1)
---  -- t: decimal=116 hexadecimal=74 binary=01110100
---  assert.equals(t[1], 116)
---  -- e: decimal=101 hexadecimal=65 binary=01100101
---  assert.equals(t[2], 101)
---  -- s: decimal=115 hexadecimal=73 binary=01110011
---  assert.equals(t[3], 115)
---  -- t: decimal=116 hexadecimal=74 binary=01110100
---  assert.equals(t[4], 116)
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L646-715](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L646-715)
---
---@see sio.readintegertable
---
---@param file file* # A file handle.
---@param number integer # The number of integers in the resulting table.
---@param bytes 1|2|3|4 # Specify 1 for 1 byte signed integers, 2 for a 2 byte signed integers, and so on.
---
---@return table<integer, integer>
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readintegertable(file, number, bytes) end

---
---Read a 1 byte signed little endian integer (8-bit) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  -- t: decimal=116 hexadecimal=74 binary=01110100
---  assert.equals(fio.readinteger1le(f), 116)
---  -- e: decimal=101 hexadecimal=65 binary=01100101
---  assert.equals(fio.readinteger1le(f), 101)
---  -- s: decimal=115 hexadecimal=73 binary=01110011
---  assert.equals(fio.readinteger1le(f), 115)
---  -- t: decimal=116 hexadecimal=74 binary=01110100
---  assert.equals(fio.readinteger1le(f), 116)
---  f:close()
---end
---```
---
---* Corresponding C source code: [liolibext.c#L432-L442](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L432-L442)
---
---little endian variant
---
---@param file file* # A file handle.
---
---@return integer
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readinteger1le(file) end

---
---Read a 2 byte signed little endian integer (16-bit) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  assert.equals(fio.readinteger2le(f), 25972)
---  assert.equals(fio.readinteger2le(f), 29811)
---  assert.is_nil(fio.readinteger2le(f))
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L472-483](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L472-483)
---
---little endian variant
---
---@param file file* # A file handle.
---
---@return integer|nil
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readinteger2le(file) end

---
---Read a 3 byte signed little endian integer (24-bit) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  assert.equals(fio.readinteger3le(f), 7562612)
---  assert.is_nil(fio.readinteger3le(f))
---  f:close()
---end
---```
---
---little endian variant
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L531-543](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L531-543)
---
---@param file file* # A file handle.
---
---@return integer|nil
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readinteger3le(file) end

---
---Read a 4 byte signed little endian integer (32-bit) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  assert.equals(fio.readinteger4le(f), 1953719668)
---  assert.is_nil(fio.readinteger4le(f))
---  f:close()
---end
---```
---
---little endian variant
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L594-607](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L594-607)
---
---@param file file* # A file handle.
---
---@return integer|nil
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readinteger4le(file) end

---
---Read a 2 byte float (used in font files) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  assert.numbers(fio.readfixed2(f), 116.39453125)
---  assert.numbers(fio.readfixed2(f), 115.453125)
---  assert.is_nil(fio.readfixed2(f))
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L802-813](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L802-813)
---
---@param file file* # A file handle.
---
---@return number|nil # a 2 byte float (used in font files)
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readfixed2(file) end

---
---Read a 4 byte float (used in font files) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  assert.numbers(fio.readfixed4(f), 29797.45098877)
---  assert.is_nil(fio.readfixed4(f))
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L830-843](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L830-843)
---
---@param file file* # A file handle.
---
---@return number|nil # a 4 byte float (used in font files)
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readfixed4(file) end

---
---Read a 2 byte float (used in font files) from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  assert.numbers(fio.read2dot14(f), 1.8186645507812)
---  fio.setposition(f, 1)
---  assert.numbers(fio.read2dot14(f), 1.5851440429688)
---  fio.setposition(f, 2)
---  assert.numbers(fio.read2dot14(f), 1.803955078125)
---  assert.is_nil(sio.read2dot14("test", 4))
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L862-874](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L862-874)
---* Corresponding fontforge C source code: [mem.c#L101-L107](https://github.com/fontforge/fontforge/blob/664b5db72e5591f40f3cc86bf1249d9c76fed82d/fontforge/mem.c#L101-L107)
---* Corresponding fontforge C source code: [ttf2eps.c#L418-L424](https://github.com/fontforge/fontforge/blob/664b5db72e5591f40f3cc86bf1249d9c76fed82d/contrib/fonttools/ttf2eps.c#L418-L424)
---
---@param file file* # A file handle.
---
---@return number|nil # a 2 byte float (used in font files)
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.read2dot14(file) end

---
---Goto `position`.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  assert.equals(fio.getposition(f), 0)
---  assert.equals(fio.setposition(f, 3), 0)
---  assert.equals(fio.getposition(f), 3)
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L901-910](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L901-910)
---
---@param file file* # A file handle.
---@param position integer
---
---@return 0|nil `0` upon success, `nil` otherwise.
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.setposition(file, position) end

---
---Get the current position.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  fio.readcardinal1(f)
---  assert.equals(fio.getposition(f), 1)
---  fio.readcardinal1(f)
---  assert.equals(fio.getposition(f), 2)
---  fio.readcardinal1(f)
---  assert.equals(fio.getposition(f), 3)
---  fio.readcardinal1(f)
---  assert.equals(fio.getposition(f), 4)
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L891-899](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L891-899)
---
---@param file file* # A file handle.
---
---@return integer position # The current position in bytes.
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.getposition(file) end

---
---Skip `number` positions.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  -- t: decimal=116 hexadecimal=74 binary=01110100
---  assert.equals(fio.readcardinal1(f), 116)
---
---  fio.setposition(f, 0)
---  assert.equals(fio.skipposition(f, 1), 0)
---  -- e: decimal=101 hexadecimal=65 binary=01100101
---  assert.equals(fio.readcardinal1(f), 101)
---  f:close()
---end
---```
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L912-921](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L912-921)
---
---@param file file* # A file handle.
---@param number integer # The number of bytes to skip.
---
---@return 0|nil `0` upon success, `nil` otherwise.
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.skipposition(file, number) end

---
---Read `number` bytes from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  local b1, b2, b3, b4 = fio.readbytes(f, 4)
---  -- t: decimal=116 hexadecimal=74 binary=01110100
---  assert.equals(b1, 116)
---  -- e: decimal=101 hexadecimal=65 binary=01100101
---  assert.equals(b2, 101)
---  -- s: decimal=115 hexadecimal=73 binary=01110011
---  assert.equals(b3, 115)
---  -- t: decimal=116 hexadecimal=74 binary=01110100
---  assert.equals(b4, 116)
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L967-980](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L967-980)
---
---@param file file* # A file handle.
---@param number integer # The number of bytes to be read.
---
---@return integer ...
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readbytes(file, number) end

---
---Read `number` bytes as a table from a file.
---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("test")
---  fio.setposition(f, 0)
---  local t = fio.readbytetable(f, 4)
---  -- t: decimal=116 hexadecimal=74 binary=01110100
---  assert.equals(t[1], 116)
---  -- e: decimal=101 hexadecimal=65 binary=01100101
---  assert.equals(t[2], 101)
---  -- s: decimal=115 hexadecimal=73 binary=01110011
---  assert.equals(t[3], 115)
---  -- t: decimal=116 hexadecimal=74 binary=01110100
---  assert.equals(t[4], 116)
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L923-943](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L923-943)
---
---@param file file* # A file handle.
---@param number integer # The number of bytes to be read.
---
---@return integer[]
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readbytetable(file, number) end

---
---__Example:__
---
---```lua
---local f = io.open("tmp.txt", "w+")
---if f then
---  f:write("line1\nline2\nline3\n")
---  fio.setposition(f, 0)
---  assert.equals(fio.readline(f), "line1")
---  assert.equals(fio.readline(f), "line2")
---  assert.equals(fio.readline(f), "line3")
---  f:close()
---end
---```
---
---__Reference:__
---
---* Corresponding C source code: [liolibext.c#L1003-1032](https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/blob/f52b099f3e01d53dc03b315e1909245c3d5418d3/source/texk/web2c/luatexdir/lua/liolibext.c#L1003-1032)
---
---@param file file* # A file handle.
---
---@return string
---
---üò± [Types](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/blob/main/library/luatex/fio.lua) incomplete or incorrect? üôè [Please contribute!](https://github.com/Josef-Friedrich/LuaTeX_Lua-API/pulls)
function fio.readline(file) end
